plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.36.0'
}

group = 'com.sohardh'
archivesBaseName = 'account-statement-service'
version = 'v0.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-gmail:v1-rev20220404-2.0.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.jsoup:jsoup:1.17.2'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.18.1'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '4.18.1'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '4.18.1'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.7.0'
    implementation 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'io.hypersistence', name: 'hypersistence-utils-hibernate-63', version: '3.8.2'
    implementation 'org.apache.commons:commons-csv:1.11.0'
}


bootJar {
    archiveFileName = "${archiveBaseName}.jar"
}

docker {
    name "${archivesBaseName}:${version}"
    tag "-latest", "${archivesBaseName}:latest"
    files tasks.bootJar.outputs.files
    buildArgs(['JAR_FILE': tasks.bootJar.archiveFileName.get()])

}

tasks.named('build') {
    dependsOn(tasks.docker)
}